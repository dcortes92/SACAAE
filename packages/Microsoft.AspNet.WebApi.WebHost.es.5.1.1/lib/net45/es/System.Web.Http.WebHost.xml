<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.WebHost</name>
  </assembly>
  <members>
    <member name="T:System.Web.Http.GlobalConfiguration">
      <summary> Proporciona una <see cref="T:System.Web.Http.HttpConfiguration" /> global para aplicaciones ASP.NET. </summary>
    </member>
    <member name="P:System.Web.Http.GlobalConfiguration.Configuration"></member>
    <member name="M:System.Web.Http.GlobalConfiguration.Configure(System.Action{System.Web.Http.HttpConfiguration})"></member>
    <member name="P:System.Web.Http.GlobalConfiguration.DefaultHandler"></member>
    <member name="P:System.Web.Http.GlobalConfiguration.DefaultServer">
      <summary> Obtiene la <see cref="T:System.Web.Http.HttpServer" /> global. </summary>
    </member>
    <member name="T:System.Web.Http.RouteCollectionExtensions">
      <summary> Métodos de extensión para <see cref="T:System.Web.Routing.RouteCollection" /></summary>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>Asigna la plantilla de ruta especificada.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="routeTemplate">Plantilla de ruta para la ruta.</param>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>Asigna la plantilla de ruta especificada y establece la ruta predeterminada.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="routeTemplate">Plantilla de ruta para la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Asigna la plantilla de ruta especificada y establece los valores de ruta predeterminados y las restricciones.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="routeTemplate">Plantilla de ruta para la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="constraints">Un conjunto de expresiones que especifican los valores para routeTemplate.</param>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.Net.Http.HttpMessageHandler)">
      <summary>Asigna la plantilla de ruta especificada y establece los valores de ruta predeterminados, las restricciones y el gestor de mensajes de extremo.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="routeTemplate">Plantilla de ruta para la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="constraints">Un conjunto de expresiones que especifican los valores para routeTemplate.</param>
      <param name="handler">Controlador al que se enviará la solicitud.</param>
    </member>
    <member name="T:System.Web.Http.WebHost.HttpControllerHandler">
      <summary>Representa un <see cref="T:System.Web.HttpTaskAsyncHandler" /> que usa un <see cref="T:System.Web.Http.HttpServer" /> para procesar solicitudes ASP.NET de forma asincrónica.</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.#ctor(System.Web.Routing.RouteData)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.WebHost.HttpControllerHandler" />.</summary>
      <param name="routeData">Datos de la ruta.</param>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.#ctor(System.Web.Routing.RouteData,System.Net.Http.HttpMessageHandler)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.WebHost.HttpControllerHandler" />.</summary>
      <param name="routeData">Datos de la ruta.</param>
      <param name="handler">El controlador de mensajes al que se deben enviar las solicitudes.</param>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.ProcessRequestAsync(System.Web.HttpContext)">
      <summary>Proporciona código que controla una tarea asincrónica</summary>
      <returns>Tarea asincrónica.</returns>
      <param name="context">Contexto HTTP.</param>
    </member>
    <member name="T:System.Web.Http.WebHost.HttpControllerRouteHandler">
      <summary> Un <see cref="T:System.Web.Routing.IRouteHandler" /> que devuelve instancias de <see cref="T:System.Web.Http.WebHost.HttpControllerHandler" /> que pueden pasar solicitudes a una instancia de <see cref="T:System.Web.Http.HttpServer" /> dada. </summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerRouteHandler.#ctor">
      <summary> Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.WebHost.HttpControllerRouteHandler" />. </summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary> Proporciona el objeto que procesa la solicitud. </summary>
      <returns> Objeto que procesa la solicitud. </returns>
      <param name="requestContext">Objeto que encapsula la información sobre la solicitud.</param>
    </member>
    <member name="P:System.Web.Http.WebHost.HttpControllerRouteHandler.Instance">
      <summary> Obtiene la instancia de <see cref="T:System.Web.Http.WebHost.HttpControllerRouteHandler" /> simple. </summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary> Proporciona el objeto que procesa la solicitud. </summary>
      <returns> Objeto que procesa la solicitud. </returns>
      <param name="requestContext">Objeto que encapsula la información sobre la solicitud.</param>
    </member>
    <member name="T:System.Web.Http.WebHost.PreApplicationStartCode">
      <summary>Proporciona un punto de registro para el código de inicio anterior a la aplicación de pertenencia sencillo.</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.PreApplicationStartCode.Start">
      <summary>Registra el código de inicio anterior a la aplicación de pertenencia sencillo.</summary>
    </member>
    <member name="T:System.Web.Http.WebHost.WebHostBufferPolicySelector">
      <summary>Representa el selector de políticas de búfer del host web.</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostBufferPolicySelector.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.WebHost.WebHostBufferPolicySelector" />.</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostBufferPolicySelector.UseBufferedInputStream(System.Object)">
      <summary>Obtiene un valor que indica si el host debe almacenar en búfer el cuerpo de entidad de la solicitud HTTP.</summary>
      <returns>true si debe usarse el almacenamiento en buffer; en caso contrario, debe usarse una solicitud transmitida.</returns>
      <param name="hostContext">Contexto del host.</param>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostBufferPolicySelector.UseBufferedOutputStream(System.Net.Http.HttpResponseMessage)">
      <summary>Usa una transmisión de salida almacenada en búfer para el host web</summary>
      <returns>Transmisión de salida almacenada en búfer.</returns>
      <param name="response">La respuesta.</param>
    </member>
    <member name="T:System.Web.Http.WebHost.WebHostPrincipalService">
      <summary>Representa el servicio de entidad de seguridad del webhost.</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostPrincipalService.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.WebHost.WebHostPrincipalService" />.</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostPrincipalService.GetCurrentPrincipal(System.Net.Http.HttpRequestMessage)">
      <summary>Devuelve la entidad de seguridad actual asociada con el webhost.</summary>
      <returns>Entidad de seguridad actual asociada con el webhost.</returns>
      <param name="request">Mensaje de solicitud.</param>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostPrincipalService.SetCurrentPrincipal(System.Security.Principal.IPrincipal,System.Net.Http.HttpRequestMessage)">
      <summary>Establece la entidad de seguridad actual asociada con el webhost.</summary>
      <param name="principal">Entidad de seguridad.</param>
      <param name="request">Mensaje de solicitud.</param>
    </member>
  </members>
</doc>